# This is a basic workflow to help you get started with Actions
name: python - full

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: "30 22 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.platform }}
    strategy:
      max-parallel: 5
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9, "3.10", "3.11", "3.12", "3.13"] # TODO (masanori): add 3.12, 3.13 when it is available
        pandas-version: ["==1.5.0", ">=1.5.0,<2.0.0", ">=2.0.0"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: false
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          uv sync --dev
          uv run pip install -U "pandas${{ matrix.pandas-version }}"
      - name: Test
        run: |
          uv run black --check --diff --quiet .
          uv run isort --check --quiet .
          uv run pflake8 .
          uv run mypy .
          uv run pytest tests/ -m "not gpu"
      - name: cov report only for python 3.11 and linux
        if: ${{ matrix.python-version == '3.11' && matrix.platform == 'ubuntu-latest' }}
        run: |
          make test-cov
      - name: Upload coverage reports to Codecov only for python 3.11 and linux
        if: ${{ matrix.python-version == '3.11' && matrix.platform == 'ubuntu-latest' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
